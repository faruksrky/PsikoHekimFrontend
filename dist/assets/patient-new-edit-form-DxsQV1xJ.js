import{r as g,j as a,K as z,d as G,B as E,u as ee,i as ae,X as se,aA as le,W as ie,z as H,A as oe,D as te,T as ne,h as Y,a0 as p,p as K,aB as W,C as F,ac as re}from"./index-CynfWJw_.js";import{t as de,z as u,L as me}from"./zod-C2F2f5go.js";import{A as J,u as pe,a as ue,C as y,F as A,i as ge}from"./fields-CkpNXIXJ.js";import{P as i}from"./index-B5Fc--5R.js";import{T as C}from"./KeyboardArrowRight-DAjf8yPQ.js";import{C as X}from"./Chip-BAdTIlY7.js";import{S as he,s as _}from"./Snackbar-DRE7eJ0q.js";import{G as U}from"./Grid2-dUppYYIQ.js";import{C as ce}from"./Card-CrNj0u9u.js";import{D as be}from"./DialogTitle-DxWrXely.js";import{D as fe,a as xe}from"./DialogContent-C7q4RNtx.js";import{m as $}from"./config-context-client-v7VOFo66-SrREZ7yf.js";const ye=[{value:"ERKEK",label:"Erkek"},{value:"KADIN",label:"Kadın"}],M=[{value:"CASH",label:"Nakit",icon:"eva:credit-card-outline",color:"#00C851"},{value:"BANK_TRANSFER",label:"Banka Havalesi",icon:"eva:archive-outline",color:"#FF6900"}],w=[{value:"PENDING",label:"Bekliyor",color:"#ffc107"},{value:"PAID",label:"Ödendi",color:"#28a745"},{value:"FAILED",label:"Başarısız",color:"#dc3545"},{value:"REFUNDED",label:"İade Edildi",color:"#6c757d"},{value:"CANCELLED",label:"İptal Edildi",color:"#dc3545"},{value:"PARTIAL",label:"Kısmi Ödeme",color:"#fd7e14"}],Q=g.forwardRef(({value:e,onChange:c,error:k,helperText:I,required:N=!1,multiple:h=!1,size:S="medium",fullWidth:D=!0,disabled:T=!1,label:b="Ödeme Yöntemi",placeholder:L="Ödeme yöntemi seçiniz..."},O)=>{const d=h?M.filter(s=>e==null?void 0:e.includes(s.value)):M.find(s=>s.value===e)||null,j=(s,l)=>{c(h?(l==null?void 0:l.map(r=>r.value))||[]:(l==null?void 0:l.value)||"")};return a.jsx(J,{multiple:h,value:d,onChange:j,options:M,getOptionLabel:s=>s.label,isOptionEqualToValue:(s,l)=>s.value===l.value,disabled:T,fullWidth:D,size:S,renderOption:(s,l)=>{const{key:r,...f}=s;return a.jsxs(E,{component:"li",...f,children:[a.jsx(z,{sx:{width:24,height:24,mr:1,bgcolor:l.color,color:"white"},children:a.jsx(G,{icon:l.icon,width:14})}),l.label]},r)},renderTags:(s,l)=>s.map((r,f)=>g.createElement(X,{...l({index:f}),key:r.value,size:"small",avatar:a.jsx(z,{sx:{bgcolor:r.color},children:a.jsx(G,{icon:r.icon,width:12})}),label:r.label})),renderInput:s=>a.jsx(C,{...s,label:b,placeholder:L,error:k,helperText:I,required:N,InputProps:{...s.InputProps,startAdornment:a.jsxs(a.Fragment,{children:[!h&&d&&a.jsx(z,{sx:{width:20,height:20,mr:1,bgcolor:d.color,color:"white"},children:a.jsx(G,{icon:d.icon,width:12})}),s.InputProps.startAdornment]})}})})});Q.propTypes={value:i.oneOfType([i.string,i.arrayOf(i.string)]),onChange:i.func.isRequired,error:i.bool,helperText:i.string,required:i.bool,multiple:i.bool,size:i.oneOf(["small","medium"]),fullWidth:i.bool,disabled:i.bool,label:i.string,placeholder:i.string};const je=g.forwardRef(({value:e,onChange:c,error:k,helperText:I,required:N=!1,multiple:h=!1,size:S="medium",fullWidth:D=!0,disabled:T=!1,label:b="Ödeme Durumu",placeholder:L="Ödeme durumu seçiniz..."},O)=>{const d=h?w.filter(s=>e==null?void 0:e.includes(s.value)):w.find(s=>s.value===e)||null,j=(s,l)=>{c(h?(l==null?void 0:l.map(r=>r.value))||[]:(l==null?void 0:l.value)||"")};return a.jsx(J,{multiple:h,value:d,onChange:j,options:w,getOptionLabel:s=>s.label,isOptionEqualToValue:(s,l)=>s.value===l.value,disabled:T,fullWidth:D,size:S,renderOption:(s,l)=>a.jsxs(E,{component:"li",...s,children:[a.jsx(E,{sx:{width:12,height:12,borderRadius:"50%",backgroundColor:l.color,mr:1}}),l.label]}),renderTags:(s,l)=>s.map((r,f)=>g.createElement(X,{...l({index:f}),key:r.value,size:"small",label:r.label,sx:{bgcolor:r.color,color:"white","& .MuiChip-deleteIcon":{color:"white"}}})),renderInput:s=>a.jsx(C,{...s,label:b,placeholder:L,error:k,helperText:I,required:N,InputProps:{...s.InputProps,startAdornment:!h&&d&&a.jsx(E,{sx:{width:8,height:8,borderRadius:"50%",backgroundColor:d.color,mr:1}})}})})});je.propTypes={value:i.oneOfType([i.string,i.arrayOf(i.string)]),onChange:i.func.isRequired,error:i.bool,helperText:i.string,required:i.bool,multiple:i.bool,size:i.oneOf(["small","medium"]),fullWidth:i.bool,disabled:i.bool,label:i.string,placeholder:i.string};re.locale("tr");const ve=u.object({patientFirstName:u.string().min(1,{message:"Ad bilgisi gereklidir!"}),patientLastName:u.string().min(1,{message:"Soyad bilgisi gereklidir!"}),patientEmail:u.string().email({message:"Geçerli bir mail adresi girilmelidir!"}).optional(),patientPhoneNumber:_.phoneNumber({isValidPhoneNumber:ge}),patientAddress:u.string().optional(),patientCountry:_.objectOrNull({message:{required_error:"Ülke bilgisi gereklidir!"}}),patientCity:u.string().optional(),patientReference:u.string().optional(),patientGender:u.string().min(1,{message:"Cinsiyet bilgisi gereklidir!"}),paymentMethod:u.string().min(1,{message:"Ödeme yöntemi bilgisi gereklidir!"}),patientAge:u.preprocess(e=>e===""?null:Number(e),u.number({required_error:"Yaş bilgisi gereklidir!",invalid_type_error:"Yaş bir sayı olmalıdır!"}).min(0,{message:"Yaş 0'dan küçük olamaz!"}))});function Oe({currentPatient:e}){ee();const c=ae(),[k,I]=g.useState(!1),[N,h]=g.useState(""),[S,D]=g.useState("success"),[T,b]=g.useState(!1),[L,O]=g.useState(null),[d,j]=g.useState(null),s=g.useMemo(()=>({patientFirstName:(e==null?void 0:e.patientFirstName)||"",patientLastName:(e==null?void 0:e.patientLastName)||"",patientEmail:(e==null?void 0:e.patientEmail)||"",patientGender:(e==null?void 0:e.patientGender)||"",patientPhoneNumber:(e==null?void 0:e.patientPhoneNumber)||"",patientCountry:(e==null?void 0:e.patientCountry)||"",patientCity:(e==null?void 0:e.patientCity)||"",patientAddress:(e==null?void 0:e.patientAddress)||"",patientAge:e!=null&&e.patientAge?parseInt(e.patientAge,10):null,paymentMethod:(e==null?void 0:e.paymentMethod)||"",patientReference:(e==null?void 0:e.patientReference)||""}),[e]),l=pe({mode:"onChange",resolver:de(ve),defaultValues:s}),{reset:r,watch:f,control:x,handleSubmit:Z,formState:{isSubmitting:V}}=l,B=f(),q=(o,n)=>{n!=="clickaway"&&I(!1)},P=async o=>{var n,R;try{let t;if(e&&e.patientId)console.log("Updating patient:",e.patientId),t=await W.put(`${F.addPatientUrl}/${e.patientId}`,o),console.log("Update Response:",t.data),p.success("Hasta bilgileri başarıyla güncellendi."),$(F.patientListUrl,void 0,{revalidate:!0}),$(F.patientListUrl,()=>{},{revalidate:!0}),setTimeout(()=>{c(K.dashboard.patient.list)},1500);else{if(console.log("Creating new patient"),t=await W.post(F.addPatientUrl,o),console.log("Create Response:",t.data),!t.data)throw new Error("API yanıtı boş!");const m=t.data.patientId;if(console.log("Patient ID:",m),!m)throw console.error("API Response:",t.data),new Error(`Danışan ID alınamadı! API yanıtı: ${JSON.stringify(t.data)}`);j(m),b(!0),p.success("Hasta kaydı yapıldı ve süreç başlatıldı.")}}catch(t){if(console.error("Hata Detayı:",{message:t.message,response:(n=t.response)==null?void 0:n.data,status:(R=t.response)==null?void 0:R.status,stack:t.stack}),t.response){const{status:m,data:v}=t.response;m===400?p.error((v==null?void 0:v.message)||"Girilen bilgilerde hata var. Lütfen tüm alanları kontrol edin."):m===409?p.error("Bu e-posta adresi veya telefon numarası zaten kullanımda."):m===422?p.error("Girilen bilgiler geçersiz. Lütfen tüm alanları doğru şekilde doldurun."):m>=500?p.error("Sunucu hatası oluştu. Lütfen daha sonra tekrar deneyin."):p.error((v==null?void 0:v.message)||"Hasta kaydedilirken bir hata oluştu. Lütfen tekrar deneyin.")}else t.request?p.error("Sunucuya bağlanılamıyor. İnternet bağlantınızı kontrol edin."):t.message?p.error(t.message):p.error("Beklenmeyen bir hata oluştu. Lütfen tekrar deneyin.")}};return a.jsx(se,{dateAdapter:le,adapterLocale:"tr",children:a.jsxs(ue,{...l,children:[a.jsx("form",{onSubmit:Z(P),children:a.jsx(U,{container:!0,spacing:3,children:a.jsx(U,{xs:12,md:12,children:a.jsxs(ce,{sx:{p:2},children:[a.jsxs(E,{rowGap:2,columnGap:2,display:"grid",gridTemplateColumns:{xs:"repeat(1, 1fr)",sm:"repeat(2, 1fr)",md:"repeat(2, 2fr)"},children:[a.jsx(y,{name:"patientFirstName",control:x,defaultValue:s.firstName,render:({field:o})=>a.jsx(C,{...o,label:"Ad",variant:"outlined",fullWidth:!0,margin:"normal",inputProps:{tabIndex:1}})}),a.jsx(y,{name:"patientLastName",control:x,defaultValue:s.surName,render:({field:o})=>a.jsx(C,{...o,label:"Soyad",variant:"outlined",fullWidth:!0,margin:"normal",inputProps:{tabIndex:2}})}),a.jsx(y,{name:"patientGender",control:x,defaultValue:s.gender,render:({field:o})=>a.jsx(A.Select,{...o,label:"Cinsiyet",inputProps:{tabIndex:3},children:ye.map(n=>a.jsx(ie,{value:n.value,children:n.label},n.value))})}),a.jsx(y,{name:"patientAge",control:x,defaultValue:s.patientAge,render:({field:{onChange:o,value:n,...R}})=>a.jsx(C,{...R,label:"Yaş",type:"number",value:n??"",onChange:t=>{const m=t.target.value;o(m===""?null:parseInt(m,10))},fullWidth:!0,inputProps:{tabIndex:4,min:0,step:1}})}),a.jsx(y,{name:"patientPhoneNumber",control:x,defaultValue:s.patientPhoneNumber,render:({field:o})=>a.jsx(A.Phone,{...o,label:"Telefon",ref:o.ref,fullWidth:!0,inputProps:{tabIndex:5},defaultCountry:"TR"})}),a.jsx(y,{name:"patientEmail",control:x,defaultValue:s.email,render:({field:o})=>a.jsx(C,{...o,label:"E-Posta",variant:"outlined",fullWidth:!0,inputProps:{tabIndex:6}})}),a.jsx(A.CountrySelect,{fullWidth:!0,name:"patientCountry",label:"Ülke",placeholder:"Ülke Seçiniz",margin:"normal",variant:"outlined"}),a.jsx(A.Text,{name:"patientCity",label:"Şehir"}),a.jsx(A.Text,{name:"patientAddress",label:"Adres",multiline:!0,rows:1,sx:{gridColumn:"span 2"}}),a.jsx(y,{name:"paymentMethod",control:x,defaultValue:s.paymentMethod,render:({field:o,fieldState:{error:n}})=>a.jsx(Q,{...o,label:"Ödeme Yöntemi",placeholder:"Ödeme yöntemi seçin",error:!!n,helperText:n==null?void 0:n.message,required:!0})}),a.jsx(A.Text,{name:"patientReference",label:"Referans"})]}),a.jsx(H,{alignItems:"flex-end",sx:{mt:1},children:a.jsx(me,{type:"submit",variant:"contained",loading:V,children:e!=null&&e.patientId?"Güncelle":"Hasta Oluştur"})})]})})})}),a.jsx(he,{open:k,autoHideDuration:6e3,onClose:q,children:a.jsx(oe,{onClose:q,severity:S,sx:{width:"100%"},children:N})}),a.jsxs(te,{open:T,onClose:()=>b(!1),children:[a.jsx(be,{children:"Danışman Atama"}),a.jsx(fe,{children:a.jsx(H,{spacing:2,sx:{mt:2},children:a.jsx(ne,{children:"Danışan kaydı başarıyla oluşturuldu. Bir danışman atamak ister misiniz?"})})}),a.jsxs(xe,{children:[a.jsx(Y,{onClick:()=>{b(!1),r(),j(null),O(null),p.success("Form temizlendi. Yeni hasta kaydı yapabilirsiniz.")},children:"Daha Sonra"}),a.jsx(Y,{variant:"contained",onClick:()=>{const o=K.dashboard.patient.assignTherapist(d);c(o,{state:{patient:{patientFirstName:B.patientFirstName,patientLastName:B.patientLastName,patientId:d}}})},children:"Danışman Ata"})]})]})]})})}export{ye as G,Oe as P};
