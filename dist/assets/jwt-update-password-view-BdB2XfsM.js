import{j as e,B as g,T as I,u as b,a as L,r as F,b as z,s as T,I as E,c as A,d as j,A as N,e as G,L as R,R as D,f as C,p as v}from"./index-CynfWJw_.js";import{L as w,t as y,z as r}from"./zod-C2F2f5go.js";import{u as k,F as u}from"./fields-CkpNXIXJ.js";import{F as S}from"./form-provider-BboyyOkn.js";import{P as H}from"./new-password-icon-WncjN8xq.js";function P({sx:s,icon:i,title:a,description:t,...l}){return e.jsxs(e.Fragment,{children:[i&&e.jsx(g,{component:"span",display:"inline-flex",sx:{mx:"auto",mb:3},children:i}),e.jsxs(g,{gap:1.5,display:"flex",flexDirection:"column",sx:{mb:5,textAlign:"center",whiteSpace:"pre-line",...s},...l,children:[e.jsx(I,{variant:"h5",children:a}),t&&e.jsx(I,{variant:"body2",sx:{color:"text.secondary"},children:t})]})]})}const V=r.object({username:r.string().min(1,{message:"Email bilgisi gereklidir!"}).email({message:"Geçerli bir Email adresi girilmelidir!"}),password:r.string().min(1,{message:"Şifre bilgisi gereklidir!"}).min(6,{message:"Şifre 6 karakterden oluşmalıdır!"})});function Y(){const s=b(),{checkUserSession:i}=L(),[a,t]=F.useState(""),l=z(),m={username:"sinan@gmail.com",password:"123456"},d=k({resolver:y(V),defaultValues:m}),{handleSubmit:p,formState:{isSubmitting:c}}=d,x=p(async o=>{try{await T({username:o.username,password:o.password}),await(i==null?void 0:i()),s.refresh()}catch(n){console.error("Sign-in error:",n);let f="Giriş yapılırken bir hata oluştu. Lütfen tekrar deneyin.";typeof n=="string"?f=n:n!=null&&n.message&&(f=n.message),t(f)}}),h=e.jsxs(g,{gap:3,display:"flex",flexDirection:"column",children:[e.jsx(u.Text,{name:"username",label:"Email",InputLabelProps:{shrink:!0}}),e.jsx(g,{gap:1.5,display:"flex",flexDirection:"column",children:e.jsx(u.Text,{name:"password",label:"Şifre",placeholder:"6+ characters",type:l.value?"text":"password",InputLabelProps:{shrink:!0},InputProps:{endAdornment:e.jsx(E,{position:"end",children:e.jsx(A,{onClick:l.onToggle,edge:"end",children:e.jsx(j,{icon:l.value?"solar:eye-bold":"solar:eye-closed-bold"})})})}})}),e.jsx(w,{fullWidth:!0,color:"inherit",size:"large",type:"submit",variant:"contained",loading:c,loadingIndicator:"Giriş Yapılıyor...",children:"Giriş"})]});return e.jsxs(e.Fragment,{children:[e.jsx(P,{title:"Kullanıcı Girişi",sx:{textAlign:{xs:"center",md:"left"}}}),!!a&&e.jsx(N,{severity:"error",sx:{mb:3},children:a}),e.jsx(S,{methods:d,onSubmit:x,children:h})]})}function B({sx:s,...i}){return null}const M=r.object({firstName:r.string().min(1,{message:"Ad bilgisi gereklidir!"}),lastName:r.string().min(1,{message:"Soyad bilgisi gereklidir!"}),email:r.string().min(1,{message:"Email bilgisi gereklidir!"}).email({message:"Geçerli bir Email adresi girilmelidir!"}),password:r.string().min(1,{message:"Şifre bilgisi gereklidir!"}).min(6,{message:"Şifre en az 6 karakterden oluşmalıdır!"})});function Q(){const{checkUserSession:s}=L(),i=b(),a=z(),[t,l]=F.useState(""),m={firstName:"",lastName:"",email:"",password:""},d=k({resolver:y(M),defaultValues:m}),{handleSubmit:p,formState:{isSubmitting:c}}=d,x=p(async o=>{try{await G({username:o.email,email:o.email,password:o.password,firstName:o.firstName,lastName:o.lastName}),await(s==null?void 0:s()),i.refresh()}catch(n){console.error(n),l(typeof n=="string"?n:n.message)}}),h=e.jsxs(g,{gap:3,display:"flex",flexDirection:"column",children:[e.jsxs(g,{display:"flex",gap:{xs:3,sm:2},flexDirection:{xs:"column",sm:"row"},children:[e.jsx(u.Text,{name:"firstName",label:"Ad",InputLabelProps:{shrink:!0}}),e.jsx(u.Text,{name:"lastName",label:"Soyad",InputLabelProps:{shrink:!0}})]}),e.jsx(u.Text,{name:"email",label:"Email",InputLabelProps:{shrink:!0}}),e.jsx(u.Text,{name:"password",label:"Şifre",placeholder:"6+ karakter",type:a.value?"text":"password",InputLabelProps:{shrink:!0},InputProps:{endAdornment:e.jsx(E,{position:"end",children:e.jsx(A,{onClick:a.onToggle,edge:"end",children:e.jsx(j,{icon:a.value?"solar:eye-bold":"solar:eye-closed-bold"})})})}}),e.jsx(w,{fullWidth:!0,color:"inherit",size:"large",type:"submit",variant:"contained",loading:c,loadingIndicator:"Hesap oluştur...",children:"Hesap Oluştur"})]});return e.jsxs(e.Fragment,{children:[e.jsx(P,{title:"Direct Nexus Hesap Oluşturma",description:"Hesap oluşturarak Direct Nexus platformunu kullanmaya başlayabilirsiniz.",sx:{textAlign:{xs:"center",md:"left"}}}),!!t&&e.jsx(N,{severity:"error",sx:{mb:3},children:t}),e.jsx(S,{methods:d,onSubmit:x,children:h}),e.jsx(B,{})]})}function q({sx:s,href:i,children:a,label:t,icon:l,...m}){return e.jsxs(R,{component:D,href:i,color:"inherit",variant:"subtitle2",sx:{mt:3,gap:.5,mx:"auto",alignItems:"center",display:"inline-flex",...s},...m,children:[l||e.jsx(j,{width:16,icon:"eva:arrow-ios-back-fill"}),t||"Login sayfasına geri dön"]})}const W=r.object({email:r.string().min(1,{message:"Email adresi girilmelidir!"}).email({message:"Geçerli bir email adresi girilmelidir!"})});function X(){const s=b(),i={email:""},a=k({resolver:y(W),defaultValues:i}),{handleSubmit:t,formState:{isSubmitting:l}}=a,m=t(async p=>{try{await C({username:p.email});const c=new URLSearchParams({email:p.email}).toString(),x=`${v.auth.amplify.updatePassword}?${c}`;s.push(x)}catch(c){console.error(c)}}),d=e.jsxs(g,{gap:3,display:"flex",flexDirection:"column",children:[e.jsx(u.Text,{autoFocus:!0,name:"email",label:"Email Adres",placeholder:"example@gmail.com",InputLabelProps:{shrink:!0}}),e.jsx(w,{fullWidth:!0,size:"large",type:"submit",variant:"contained",loading:l,loadingIndicator:"Gönderiliyor...",children:"Gönder"})]});return e.jsxs(e.Fragment,{children:[e.jsx(P,{icon:e.jsx(H,{}),title:"Şifrenizi mi unuttunuz ?",description:"Hesabınızla ilişkili e-posta adresinizi girin, size şifrenizi sıfırlamanız için bir bağlantı göndereceğiz.."}),e.jsx(S,{methods:a,onSubmit:m,children:d}),e.jsx(q,{href:v.auth.jwt.signIn})]})}r.object({code:r.string().min(1,{message:"Code is required!"}).min(6,{message:"Code must be at least 6 characters!"}),email:r.string().min(1,{message:"Email is required!"}).email({message:"Email must be a valid email address!"}),password:r.string().min(1,{message:"Password is required!"}).min(6,{message:"Password must be at least 6 characters!"}),confirmPassword:r.string().min(1,{message:"Confirm password is required!"})}).refine(s=>s.password===s.confirmPassword,{message:"Passwords do not match!",path:["confirmPassword"]});export{Y as J,X as R,Q as a};
